
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    ports:
      - "5672:5672"
    restart: always


  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_DB=postgres_django
      - POSTGRES_USER=postgres_django
      - POSTGRES_HOST=localhost
      - POSTGRES_PASSWORD=K@lhor1381
    networks:
      - main
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
  

  redis:
    container_name: redis
    image: redis:latest
    environment:
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
      - REDIS_DATABASES=0
    networks:
      - main
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - /path/to/local/data:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf

  celery_worker:
    container_name: celery_worker
    command: "celery -A config worker -l INFO"
    depends_on:
      - app
      - rabbitmq
      - postgres
    build: .
    environment:
      - C_FORCE_ROOT="true"
    networks:
      - main
    restart: always



  app:
    build: .
    command: sh -c "python manage.py migrate && gunicorn config.wsgi 0.0.0.0:8000"
    container_name: app
    volumes:
      - .:/src/
    depends_on:
      - postgres
      - rabbitmq
    expose:
      - "8000"
    networks:
      - main
    restart: always

  # nginx:
  #   container_name: nginx
  #   command: nginx -g 'daemon off;'
  #   depends_on:
  #     - app
  #   image: nginx:latest
  #   networks:
  #     - main
  #   ports:
  #     - "80:80"
  #   restart: always
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf

networks:
  main:

volumes:
  postgres_data:

